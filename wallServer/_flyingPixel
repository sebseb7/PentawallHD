#!/usr/bin/perl

use strict;
use timesin qw(timesin);
use pwhd;
use Time::HiRes qw(usleep time);

pwhd::init();
	warn pwhd::readline();
pwhd::setLevel(4);
	warn pwhd::readline();


#	pwhd::binFrame("0401\r\n0401\r\n0401\r\n0401\r\n0401\r\n0401\r\n0401\r\n");
	
#	warn pwhd::readline();
#	warn pwhd::readline();
#	warn pwhd::readline();
#	warn pwhd::readline();
#	warn pwhd::readline();
#	warn pwhd::readline();
#	warn pwhd::readline();
	
#exit;

my @frame;

foreach my $x (0..576)
{
	$frame[$x] = 0;
}


my @pixels;

my $pixels = 40;

for(0..($pixels-1))
{
	push @pixels,[rand(3)+3,rand(2)+1,rand(1)+2,rand(1)+2,rand(1)+2];
}

my $count;
while(1)
{
	my $start = time;
	foreach my $x (0..575)
	{
		$frame[$x] = '000000';
	}


	foreach my $pixel (@pixels)
	{
		$frame[sprintf("%1d",timesin::timesin(1,23,$pixel->[0]))+(sprintf("%1d",timesin::timesin(1,23,$pixel->[1]))*24)] = 
				sprintf("%02x",timesin::timesin(0.7,250,$pixel->[2])).
				sprintf("%02x",timesin::timesin(0.7,250,$pixel->[3])).
				sprintf("%02x",timesin::timesin(0.7,250,$pixel->[4]));


	}

#	warn length(join('',@frame));
	pwhd::binFrame('03'.join('', @frame)."\r\n");
	warn pwhd::readline();
#	warn ('03'.join('', @frame)."\r\n");
	usleep(44*1000);
	warn (1/ (time-$start) );

}
