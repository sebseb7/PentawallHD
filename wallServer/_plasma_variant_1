#!/usr/bin/perl

#use Device::SerialPort;
use Time::HiRes qw(usleep time sleep);

use pwhd;
use strict;

pwhd::init();

my $z = rand(100000);
my $z1 = rand(100000);

my @pixbuf;
foreach my $i (0..2303)
{
    $pixbuf[$i]=0;
}

my @pixbuf_g;
foreach my $i (0..2303)
{
    $pixbuf_g[$i]=0;
}
my @pixbuf_b;
foreach my $i (0..2303)
{
    $pixbuf_b[$i]=0;
}


my $slider=0;
my $slider_add = 0.01;

while(1)
{
	$z+= ((sin($z1))/100);
	$z1+=0.001;
	my $time1 = time;
 

	my $pixel = 0;
	my $mod = 0;


	
	foreach my $y (0..23)
	{
		foreach my $x (0..23)
		{

#			my $num = sin($x*3.2+3*sin($z))*40*cos($z*2.1);
#			$num *= abs sin($y*3.1-4)*10 + cos($y*3-sin($z*3))*25 ;

			my $num = ((sin($x/$z)+(sin($z)*10))+1)*164;

			$num +=  (sin($y/3+sin(sin($z1*2)*20)*4)+1)*164;

			$num = (sin(($num/300)+(sin($z1)*60))+1)*128;

			my $num_g = (sin(($num/70)+(sin($z1)*60))+1)*128;
			$num = (sin(($num/100)+(sin($z1)*60))+1)*128;
			$num +=  (sin($y/3+sin(sin($z1*2)*2)*5)+1)*142;
			my $num_b = (sin(($num/50)+(sin($z1)*20))+1)*128;

			$num=1 if $num<1;
			$num=255 if $num > 255;
			$num_g=1 if $num_g<1;
			$num_g=255 if $num_g > 255;
			$num_b=1 if $num_b<1;
			$num_b=255 if $num_b > 255;

			$pixbuf[$y*24+$x]=$num;
			
			$pixbuf_g[$y*24+$x]=$num_g;
			$pixbuf_b[$y*24+$x]=$num_b;
		}
	}

	my $str="03";

	foreach my $y (0..23)
	{
		foreach my $x (0..23)
		{
			$str.=sprintf("%02x",$pixbuf[$y*24+$x]).sprintf("%02x",$pixbuf_g[$y*24+$x]).sprintf("%02x",$pixbuf_b[$y*24+$x]);
		#	$str.=chr($pixbuf_b[$y*24+$x]*$slider).chr(0).chr($pixbuf_b[$y*24+$x]*(1-$slider));
		}
	}


	pwhd::binFrame($str);
	pwhd::readline();
	usleep(40000);
	warn $slider;

	$slider+=$slider_add;
	
	if($slider >= 0.9)
	{
#		$slider=0;
		$slider_add = -0.01;
	}
	if($slider <= 0.1)
	{
#		$slider=0;
		$slider_add = 0.01;
	}

	usleep(6000);
	
}



